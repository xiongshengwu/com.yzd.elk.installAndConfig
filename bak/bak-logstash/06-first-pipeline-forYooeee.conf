input {
    beats {
        port => "5044"
    }
}
filter {
	if [type] == "log_java" {
        grok {
            match => {
             "message" => "\[ELK=]\[(?<T1>[^]]*)] \| \[(?<T2>[^]]*)] \| \[(?<T3>[^]]*)] \| \[(?<T4>[^]]*)] \| \[(?<T5>[^]]*)] \| \[(?<T6>[^]]*)] \| -->[\s\S]*"
             } 
            overwrite => ["message"]
        }
    }else if [type] == "log_yzd" {
        grok {
            match => {
             "message" => "\[ELK=]\[(?<traceId>[^]]*)]-\[(?<createTime>[^]]*)]-\[(?<level>[^]]*)]-\[(?<logger>[^]]*)][\s\S]*"
             } 
            overwrite => ["message"]
        }
    }else if [type] == "log_yooeee" {
        grok {
            match => {
             "message" => "\[ELK=]\[(?<traceId>[^]]*)]-\[(?<createTime>[^]]*)]-\[(?<level>[^]]*)]-\[(?<logger>[^]]*)][\s\S]*"
             } 
            overwrite => ["message"]
        }
    }
}
output {

	if [fields][service] == "service_user" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "service_user-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "service_order" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "service_order-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "com_yzd_web" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "com_yzd_web-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "com_yzd_dubbo_service_provider" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "com_yzd_dubbo_service_provider-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "com_yzd_dubbo_service_consumer" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "com_yzd_dubbo_service_consumer-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "pj_jeesite" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "pj_jeesite-%{+YYYY.MM.dd}"
		}
    }else if [fields][service] == "pj_business" {
		elasticsearch { 
		hosts => ["localhost:9200"] 
		index => "pj_business-%{+YYYY.MM.dd}"
		}
    }else {
		elasticsearch { hosts => ["localhost:9200"] }
		stdout { codec => rubydebug }
    }
}